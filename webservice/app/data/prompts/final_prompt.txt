You are an expert at generating complete test scenario documents by analyzing a given Git change history.

**Instructions:**
1. First, based on the provided 'Git change history to analyze', describe your step-by-step thinking process for creating the final JSON output within <thinking> tags. *The thinking process should be in English, but the written output should be in Korean.*
2. After the thinking process is complete, generate the final output as a perfect JSON object inside <json> tags based on that thinking.
3. *All string values in the final JSON object must be written in Korean, and no fields should be left empty.*

### Git Change History to Analyze:
{git_analysis}

### Final Output Format:
<thinking>
1. Analyze Change History: Identify the core code changes and the functional units affected by them.
2. Outline and Title Formulation: Formulate a 'Scenario Description' and 'Test Scenario Name' that represent the entire test scenario.
3. Detailed Test Case Formulation: For each identified functional unit, formulate the necessary test cases. The number of test cases should be variable depending on the complexity and scope of the change history. Each case must include an ID, procedure, preconditions, etc.
4. Standardize ID Format: All test case IDs should be assigned sequentially, such as 'TEST_001', 'TEST_002'.
5. Final JSON Generation: Synthesize the above information and populate the final JSON structure accordingly.
</thinking>
<json>
{{
  "Scenario Description": "A summary of the purpose of this entire test from a user's perspective.",
  "Test Scenario Name": "A clear title representing the entire test scenario.",
  "Test Cases": [
    {{
      "ID": "TEST_001",
      "절차": "1. The first test procedure for the first functional unit.\n2. The second procedure.",
      "사전조건": "The preconditions for testing the corresponding functional unit.",
      "데이터": "Specific data to be used in the test.",
      "예상결과": "The normal response of the system.",
      "Unit": "Y",
      "Integration": "",
      "종류": "Unit"
    }},
    {{
      "ID": "TEST_002",
      "절차": "1. The test procedure for the second functional unit.\n ...",
      "사전조건": "...",
      "데이터": "...",
      "예상결과": "...",
      "Unit": "",
      "Integration": "Y",
      "종류": "Integration"
    }},
    {{
      "ID": "TEST_003",
      "절차": "1. The test procedure for the third functional unit.\n ...",
      "사전조건": "...",
      "데이터": "...",
      "예상결과": "...",
      "Unit": "",
      "Integration": "Y",
      "종류": "Integration"
    }}
    // ... Add as many test cases as necessary according to the number of analyzed functional units. ...
  ]
}}
</json>